{"version":3,"sources":["components/Search.jsx","components/Results.jsx","components/Main.jsx","components/App.js","index.js","assets/reddit.webp"],"names":["Search","props","state","userInput","updateInput","bind","handleSubmit","e","input","target","value","this","setState","preventDefault","search","className","onSubmit","id","type","name","onChange","placeholder","React","Component","Results","topics","map","results","i","href","data","url","key","title","length","Main","count","performSearch","query","console","log","fetch","then","res","json","children","catch","err","App","src","RedditLogo","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"0MAEqBA,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,UAAW,IAEf,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBANL,E,wDASPE,GACR,IAAIC,EAAQD,EAAEE,OAAOC,MACrBC,KAAKC,SAAS,CAACT,UAAWK,M,mCAGjBD,GACTA,EAAEM,iBACFF,KAAKV,MAAMa,OAAOP,EAAEE,OAAOK,OAAOJ,S,+BAIlC,OACI,0BAAMK,UAAU,OAAOC,SAAUL,KAAKL,cAClC,2BAAOW,GAAG,aACNC,KAAK,OACLC,KAAK,SAELC,SAAUT,KAAKP,YACfiB,YAAY,gCAChB,4C,GA7BoBC,IAAMC,WCArBC,E,wKAEb,OAAOb,KAAKV,MAAMwB,OAAOC,KAAI,SAACC,EAASC,GACnC,OAAO,uBAAGC,KAAMF,EAAQG,KAAKC,IAAKtB,OAAO,QAAQuB,IAAKJ,GAAG,4BAAKD,EAAQG,KAAKG,a,+BAK/E,OACI,yBAAKlB,UAAU,cACX,uBAAGE,GAAG,WAAN,YAA0BN,KAAKV,MAAMwB,OAAOS,QAC5C,4BAAKvB,KAAKgB,gB,GAXWL,IAAMC,WCEtBY,E,kDACjB,WAAYlC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTuB,OAAQ,GACRW,MAAO,GAEX,EAAKC,cAAgB,EAAKA,cAAchC,KAAnB,gBANP,E,0DASJiC,GAAQ,IAAD,OACjBC,QAAQC,IAAI,UAAWF,GACvBG,MAAM,4BAAD,OAA6BH,EAA7B,WACJI,MAAK,SAAAC,GAEF,OADAJ,QAAQC,IAAI,aAAcG,GACnBA,EAAIC,UAEdF,MAAK,SAAAC,GACF,EAAK/B,SAAS,CAACa,OAAQkB,EAAIb,KAAKe,cAEnCC,OAAM,SAAAC,GACHR,QAAQC,IAAI,UAAWO,Q,+BAK3B,OACI,6BACI,kBAAC,EAAD,CAAQjC,OAAQH,KAAK0B,gBACrB,kBAAC,EAAD,CAAStB,UAAU,gBAAgBU,OAAQd,KAAKT,MAAMuB,c,GA7BpCH,IAAMC,W,sBCCzB,SAASyB,IACtB,OACE,yBAAKjC,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKkC,IAAKC,MACV,wDAGA,kBAAC,EAAD,OCTRC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACL,EAAD,OAEFM,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.3a6d8884.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class Search extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            userInput: '' \n        }\n        this.updateInput = this.updateInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    updateInput(e) {\n        let input = e.target.value;\n        this.setState({userInput: input})\n    }\n\n    handleSubmit(e){\n        e.preventDefault();\n        this.props.search(e.target.search.value)\n    }\n\n    render() {\n        return (\n            <form className=\"form\" onSubmit={this.handleSubmit}>\n                <input id=\"searchform\"\n                    type=\"text\" \n                    name=\"search\"\n                    \n                    onChange={this.updateInput} \n                    placeholder=\"What's do you want to know?\" /> \n                <button>Go!</button>\n            </form>\n        )\n    }\n}\n","import React from 'react';\n\nexport default class Results extends React.Component {\n    results(){\n        return this.props.topics.map((results, i) => {\n            return <a href={results.data.url} target=\"blank\" key={i}><li>{results.data.title}</li></a>\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"resultsDiv\">\n                <p id=\"results\">Results: {this.props.topics.length}</p>\n                <ul>{this.results()}</ul>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Search from './Search';\nimport Results from './Results';\n\nexport default class Main extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            topics: [],\n            count: 0\n        }\n        this.performSearch = this.performSearch.bind(this);\n    }\n\n    performSearch(query) {\n        console.log('Query: ', query)\n        fetch(`https://www.reddit.com/r/${query}.json?`)\n        .then(res => {\n            console.log('results : ', res);\n            return res.json();\n        })\n        .then(res => {\n            this.setState({topics: res.data.children })\n        })\n        .catch(err => {\n            console.log('Error: ', err)\n        })\n    }\n    \n    render(){\n        return (\n            <div>\n                <Search search={this.performSearch}/>\n                <Results className=\"searchResults\" topics={this.state.topics}/>\n            </div>)\n    }\n}\n","import React from 'react';\nimport Main from './Main';\nimport RedditLogo from '../../src/assets/reddit.webp'\nimport './style.css';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={RedditLogo} />\n        <h1>Subreddit Search Engine</h1>\n\n      </header>\n        <Main />\n    </div>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","module.exports = __webpack_public_path__ + \"static/media/reddit.2f34ee0b.webp\";"],"sourceRoot":""}